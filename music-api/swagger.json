{
  "openapi": "3.0.0",
  "info": {
    "title": "Music API",
    "description": "A comprehensive REST API for managing artists and albums with full CRUD operations, authentication, and data validation",
    "version": "1.0.0",
    "contact": {
      "name": "Music API Support",
      "email": "support@musicapi.com"
    }
  },
  "servers": [
    {
      "url": "https://music-api-cse341.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "OAuth authentication and user management"
    },
    {
      "name": "Artists",
      "description": "Operations for managing musical artists"
    },
    {
      "name": "Albums",
      "description": "Operations for managing albums"
    }
  ],
  "paths": {
    "/auth/login": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get login information",
        "description": "Shows OAuth login options and demo authentication status",
        "responses": {
          "200": {
            "description": "Login information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OAuth authentication available"
                    },
                    "googleLogin": {
                      "type": "string",
                      "example": "/auth/google"
                    },
                    "demo": {
                      "type": "string",
                      "example": "Demo mode active - authentication is simulated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get user profile",
        "description": "Returns the current authenticated user's profile",
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    },
                    "authenticated": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/artists": {
      "get": {
        "tags": ["Artists"],
        "summary": "Get all artists",
        "description": "Retrieve all artists from the database",
        "responses": {
          "200": {
            "description": "Successfully retrieved artists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Artists"],
        "summary": "Create a new artist",
        "description": "Add a new artist to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/artists/{id}": {
      "get": {
        "tags": ["Artists"],
        "summary": "Get artist by ID",
        "description": "Retrieve a specific artist by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the artist"
          }
        ],
        "responses": {
          "200": {
            "description": "Artist found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Artist not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Artists"],
        "summary": "Update artist",
        "description": "Update an existing artist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the artist"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Artist updated successfully"
          },
          "400": {
            "description": "Validation error or invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "Artist not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Artists"],
        "summary": "Delete artist",
        "description": "Delete an artist from the database (only if no albums are associated)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the artist"
          }
        ],
        "responses": {
          "200": {
            "description": "Artist deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format or artist has associated albums",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Artist not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/albums": {
      "get": {
        "tags": ["Albums"],
        "summary": "Get all albums",
        "description": "Retrieve all albums from the database",
        "responses": {
          "200": {
            "description": "Successfully retrieved albums",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Albums"],
        "summary": "Create a new album",
        "description": "Add a new album to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Album created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{id}": {
      "get": {
        "tags": ["Albums"],
        "summary": "Get album by ID",
        "description": "Retrieve a specific album by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the album"
          }
        ],
        "responses": {
          "200": {
            "description": "Album found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Album not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Albums"],
        "summary": "Update album",
        "description": "Update an existing album",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the album"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Album updated successfully"
          },
          "400": {
            "description": "Validation error or invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "Album not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Albums"],
        "summary": "Delete album",
        "description": "Delete an album from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the album"
          }
        ],
        "responses": {
          "200": {
            "description": "Album deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Album not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/albums/artist/{artistId}": {
      "get": {
        "tags": ["Albums"],
        "summary": "Get albums by artist",
        "description": "Retrieve all albums for a specific artist",
        "parameters": [
          {
            "name": "artistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "MongoDB ObjectId of the artist"
          }
        ],
        "responses": {
          "200": {
            "description": "Albums for the specified artist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid artist ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Artist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": {
            "type": "string",
            "description": "Name of the artist"
          },
          "genre": {
            "type": "string",
            "description": "Primary music genre"
          },
          "country": {
            "type": "string",
            "description": "Country of origin"
          },
          "formed_year": {
            "type": "integer",
            "description": "Year the artist/band was formed"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of band members"
          },
          "biography": {
            "type": "string",
            "description": "Artist biography"
          },
          "website": {
            "type": "string",
            "description": "Official website URL"
          },
          "social_media": {
            "type": "object",
            "description": "Social media handles"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "ArtistInput": {
        "type": "object",
        "required": ["name", "genre", "country", "formed_year", "members"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the artist",
            "example": "The Beatles"
          },
          "genre": {
            "type": "string",
            "description": "Primary music genre",
            "example": "Rock"
          },
          "country": {
            "type": "string",
            "description": "Country of origin",
            "example": "United Kingdom"
          },
          "formed_year": {
            "type": "integer",
            "description": "Year the artist/band was formed",
            "example": 1960
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of band members",
            "example": ["John Lennon", "Paul McCartney", "George Harrison", "Ringo Starr"]
          },
          "biography": {
            "type": "string",
            "description": "Artist biography",
            "example": "The Beatles were an English rock band formed in Liverpool in 1960."
          },
          "website": {
            "type": "string",
            "description": "Official website URL",
            "example": "https://www.thebeatles.com"
          },
          "social_media": {
            "type": "object",
            "description": "Social media handles",
            "example": {
              "twitter": "@thebeatles",
              "instagram": "@thebeatles"
            }
          }
        }
      },
      "Album": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "title": {
            "type": "string",
            "description": "Album title"
          },
          "artist_id": {
            "type": "string",
            "description": "Reference to artist ObjectId"
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "description": "Album release date"
          },
          "genre": {
            "type": "string",
            "description": "Album genre"
          },
          "track_count": {
            "type": "integer",
            "description": "Number of tracks on the album"
          },
          "duration": {
            "type": "integer",
            "description": "Album duration in minutes"
          },
          "record_label": {
            "type": "string",
            "description": "Record label"
          },
          "cover_image_url": {
            "type": "string",
            "description": "URL to album cover image"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "AlbumInput": {
        "type": "object",
        "required": ["title", "artist_id", "release_date", "genre", "track_count", "duration"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Album title",
            "example": "Abbey Road"
          },
          "artist_id": {
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$",
            "description": "Reference to artist ObjectId",
            "example": "60f7c2b8d4f1c12345678901"
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "description": "Album release date",
            "example": "1969-09-26"
          },
          "genre": {
            "type": "string",
            "description": "Album genre",
            "example": "Rock"
          },
          "track_count": {
            "type": "integer",
            "minimum": 1,
            "description": "Number of tracks on the album",
            "example": 17
          },
          "duration": {
            "type": "integer",
            "minimum": 1,
            "description": "Album duration in minutes",
            "example": 47
          },
          "record_label": {
            "type": "string",
            "description": "Record label",
            "example": "Apple Records"
          },
          "cover_image_url": {
            "type": "string",
            "description": "URL to album cover image",
            "example": "https://example.com/abbey-road.jpg"
          }
        }
      },
      "CreateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Artist created successfully"
          },
          "insertedId": {
            "type": "string",
            "example": "60f7c2b8d4f1c12345678901"
          }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Artist deleted successfully"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Artist not found"
          },
          "message": {
            "type": "string",
            "example": "No artist exists with the provided ID"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Validation failed"
          },
          "message": {
            "type": "string",
            "example": "Please correct the following errors"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Artist name is required", "Valid formed year is required"]
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth": {
        "type": "oauth2",
        "description": "OAuth 2.0 authentication with Google",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/auth/google",
            "tokenUrl": "/auth/google/callback",
            "scopes": {
              "profile": "Access user profile",
              "email": "Access user email"
            }
          }
        }
      }
    }
  }
}