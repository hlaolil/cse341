{
  "openapi": "3.0.0",
  "info": {
    "title": "Contacts API",
    "version": "1.0.0",
    "description": "Professional API for managing contacts with full CRUD operations. Stores firstName, lastName, email, favoriteColor, and birthday for each contact."
  },
  "servers": [
    { 
      "url": "https://cse341-al36.onrender.com",
      "description": "Production server on Render"
    },
    { 
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "summary": "Get all contacts",
        "description": "Retrieves all contacts from the MongoDB database",
        "responses": {
          "200": {
            "description": "Successfully retrieved all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Contact" }
                },
                "example": [
                  {
                    "_id": "68b7627b0f7282e4198f94d9",
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "john@example.com",
                    "favoriteColor": "Blue",
                    "birthday": "1990-01-01"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new contact",
        "description": "Creates a new contact. All fields are required.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactInput" },
              "example": {
                "firstName": "Jane",
                "lastName": "Smith",
                "email": "jane.smith@example.com",
                "favoriteColor": "Green",
                "birthday": "1995-03-15"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insertedId": { "type": "string", "example": "68b7627b0f7282e4198f94da" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Get contact by ID",
        "description": "Retrieves a single contact by MongoDB ObjectId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "68b7627b0f7282e4198f94d9"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Contact" }
              }
            }
          },
          "404": { "description": "Contact not found" },
          "400": { "description": "Invalid ID format" }
        }
      },
      "put": {
        "summary": "Update a contact",
        "description": "Updates an existing contact by ID. Partial updates are allowed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "68b7627b0f7282e4198f94d9"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactUpdate" },
              "example": {
                "favoriteColor": "Purple",
                "email": "newemail@example.com"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Contact updated successfully" },
          "404": { "description": "Contact not found" },
          "400": { "description": "Invalid ID format or update data" }
        }
      },
      "delete": {
        "summary": "Delete a contact",
        "description": "Deletes a contact by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "68b7627b0f7282e4198f94d9"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Contact deleted successfully" }
                  }
                }
              }
            }
          },
          "404": { "description": "Contact not found" },
          "400": { "description": "Invalid ID format" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "example": "68b7627b0f7282e4198f94d9" },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "email": { "type": "string", "format": "email", "example": "john@example.com" },
          "favoriteColor": { "type": "string", "example": "Blue" },
          "birthday": { "type": "string", "format": "date", "example": "1990-01-01" }
        },
        "required": ["_id", "firstName", "lastName", "email", "favoriteColor", "birthday"]
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string", "example": "Jane" },
          "lastName": { "type": "string", "example": "Smith" },
          "email": { "type": "string", "format": "email", "example": "jane@example.com" },
          "favoriteColor": { "type": "string", "example": "Green" },
          "birthday": { "type": "string", "format": "date", "example": "1995-03-15" }
        },
        "required": ["firstName", "lastName", "email", "favoriteColor", "birthday"]
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "favoriteColor": { "type": "string" },
          "birthday": { "type": "string", "format": "date" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "All fields are required: firstName, lastName, email, favoriteColor, birthday" }
        }
      }
    }
  }
}
